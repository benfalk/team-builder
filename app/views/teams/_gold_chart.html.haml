%canvas#myChart{height: "200", width: "870", style:'margin-left: -14px;'}
:javascript
  var data = {
      labels : ["Game 1","Game 2","Game 3","Game 4","Game 5","Game 6","Game 7","Game 8","Game 9","Game 10"],
      datasets : [
          {
              fillColor : "rgba(0, 102, 153, 0.2)",
              strokeColor : "rgba(0, 102, 153, 0.8)",
              pointColor : "rgba(0, 102, 153, 1)",
              pointStrokeColor : "#fff",
              data : [65,59]
          },
          {
              fillColor : "rgba(66, 139, 202, 0.2)",
              strokeColor : "rgba(66, 139, 202, 0.8)",
              pointColor : "rgba(66, 139, 202, 1)",
              pointStrokeColor : "#fff",
              data : [28,48]
          },
          {
              fillColor : "rgba(93, 166, 189, 0.2)",
              strokeColor : "rgba(93, 166, 189, 0.8)",
              pointColor : "rgba(93, 166, 189, 1)",
              pointStrokeColor : "#fff",
              data : [45,59]
          },
          {
              fillColor : "rgba(158, 196, 217, 0.2)",
              strokeColor : "rgba(158, 196, 217, 0.8)",
              pointColor : "rgba(158, 196, 217, 1)",
              pointStrokeColor : "#fff",
              data : [23,41]
          },
          {
              fillColor : "rgba(238, 238, 238, 0.2)",
              strokeColor : "rgba(238, 238, 238, 0.8)",
              pointColor : "rgba(238, 238, 238, 1)",
              pointStrokeColor : "#fff",
              data : [75,29]
          }
      ]
  }
  var options = {

    //Boolean - If we show the scale above the chart data
    scaleOverlay : false,

    //Boolean - If we want to override with a hard coded scale
    scaleOverride : false,

    //** Required if scaleOverride is true **
    //Number - The number of steps in a hard coded scale
    scaleSteps : null,
    //Number - The value jump in the hard coded scale
    scaleStepWidth : null,
    //Number - The scale starting value
    scaleStartValue : null,

    //String - Colour of the scale line
    scaleLineColor : "rgba(78, 93, 108, 0.5)",

    //Number - Pixel width of the scale line
    scaleLineWidth : 1,

    //Boolean - Whether to show labels on the scale
    scaleShowLabels : true,

    //Interpolated JS string - can access value
    scaleLabel : "<%=value%>",

    //String - Scale label font declaration for the scale label
    scaleFontFamily : "'Arial'",

    //Number - Scale label font size in pixels
    scaleFontSize : 9,

    //String - Scale label font weight style
    scaleFontStyle : "normal",

    //String - Scale label font colour
    scaleFontColor : "rgba(255,255,255,0.7)",

    ///Boolean - Whether grid lines are shown across the chart
    scaleShowGridLines : true,

    //String - Colour of the grid lines
    scaleGridLineColor : "rgba(78, 93, 108, 0.5)",

    //Number - Width of the grid lines
    scaleGridLineWidth : 1,

    //Boolean - Whether the line is curved between points
    bezierCurve : true,

    //Boolean - Whether to show a dot for each point
    pointDot : true,

    //Number - Radius of each point dot in pixels
    pointDotRadius : 3,

    //Number - Pixel width of point dot stroke
    pointDotStrokeWidth : 1,

    //Boolean - Whether to show a stroke for datasets
    datasetStroke : true,

    //Number - Pixel width of dataset stroke
    datasetStrokeWidth : 2,

    //Boolean - Whether to fill the dataset with a colour
    datasetFill : true,

  }
  var ctx = document.getElementById("myChart").getContext("2d");
  new Chart(ctx).Line(data,options);

.chart-keys
  - @hash = ['rgba(0, 102, 153, 1)','rgba(66, 139, 202, 1)','rgba(93, 166, 189, 1)','rgba(158, 196, 217, 1)','rgba(238, 238, 238, 1)']
  - @hash.each do |v|
    .key
      .dot{style:"background:#{v};"}
      potterbaum