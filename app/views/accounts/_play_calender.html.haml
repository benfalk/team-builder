
:css
  #cal {
  font: 10px sans-serif;
  shape-rendering: crispEdges;
  margin-top:10px;
  }

  .day {
  fill: #3f5060;
  stroke: #2b3e50;
  stroke-width: 1;
  }

  .month {
  fill: none;
  stroke: #fff;
  stroke-width: 1;
  }

  .month-name {
  fill:  #AAACAF;
  }

  .day-name {
  fill:  #AAACAF;
  }

  .RdYlGn .g0{fill:rgba(63, 80, 96, 0.7);}
  .RdYlGn .g1{fill:rgba(87, 177, 255, 0.3);}
  .RdYlGn .g2{fill:rgba(87, 177, 255, 0.3);}
  .RdYlGn .g3{fill:rgba(87, 177, 255, 0.5);}
  .RdYlGn .g4{fill:rgba(87, 177, 255, 0.5);}
  .RdYlGn .g5{fill:rgba(87, 177, 255, 0.7);}
  .RdYlGn .g6{fill:rgba(87, 177, 255, 0.7);}
  .RdYlGn .g7{fill:rgba(87, 177, 255, 0.9);}
  .RdYlGn .g8{fill:rgba(87, 177, 255, 0.9);}
  .RdYlGn .g9{fill:rgba(87, 177, 255, 1);}
  .RdYlGn .g15{fill:rgba(103, 185, 255, 1);}
  .RdYlGn .g20{fill:rgba(200, 230, 255, 1);}


  .contrib-legend .legend {
  display: inline-block;
  list-style: none;
  margin: 0 5px;
  position: relative;
  bottom: -1px;
  }
  .contrib-footer {
  padding: 0 10px 20px;
  }
  .contrib-footer .contrib-info {
  font-size: 11px;
  color: #999;
  float: left;
  }
  .contrib-legend {
  font-size: 11px;
  color: #999;
  float: right;
  margin-right:5px;
  }

  .contrib-legend .legend li {
  display: inline-block;
  width: 10px;
  height: 10px;
  }

  .tipsy { font-size: 10px; position: absolute; padding: 5px; z-index: 100000; }
  .tipsy-inner { background-color: #000; color: #FFF; max-width: 200px; padding: 5px 8px 4px 8px; text-align: center; overflow:hidden; }

  /* Rounded corners */
  .tipsy-inner { border-radius: 3px; }


#cal

:javascript
  var width = 850,
     height = 140,
     cellSize = 15.5,
     data = #{data.to_json};

  var day = d3.time.format("%w"),
    week = d3.time.format("%U"),
    month = d3.time.format("%b"),
    percent = d3.format(".1%"),
    format = d3.time.format("%Y-%m-%d"),
    currentDate  = new Date(),
    startDate  = new Date(),
    endDate    = new Date();
    startDate.setTime(currentDate.getTime() + (1 * 24 * 60 * 60 * 1000));
    endDate.setTime(currentDate.getTime() - (365 * 24 * 60 * 60 * 1000));

    //console.log([[format(endDate),format(currentDate)]])
    //console.log(data)

  var svg = d3.select("#cal").selectAll("svg")
     .data([[format(endDate),format(startDate)]])
   .enter().append("svg")
     .attr("width", width)
     .attr("height", height)
     .attr("class", "RdYlGn")
   .append("g")
     .attr("transform", "translate(" + ((width - cellSize * 53) / 2) + "," + (height - cellSize * 7 - 1) + ")");

  svg.append("text")
     .attr("transform", "translate(-10," + (cellSize * 2 -4)+ ")")
     .style("text-anchor", "middle")
     .attr("class", "day-name")
     .text("M");

  svg.append("text")
     .attr("transform", "translate(-10," + (cellSize * 4 -4) + ")")
     .style("text-anchor", "middle")
     .attr("class", "day-name")
     .text('W');

  svg.append("text")
     .attr("transform", "translate(-10," + (cellSize * 6 -4) + ")")
     .style("text-anchor", "middle")
     .attr("class", "day-name")
     .text('F');


  var first_day = parseInt(day(endDate))

  var rect = svg.selectAll(".day")
     .data(function(d) {return d3.time.days(new Date(d[0]), new Date(d[1])); })
   .enter().append("rect")
     .attr("class", "day")
     .attr("width", cellSize)
     .attr("height", cellSize)
     .attr("x", function(d,i) { return parseInt((first_day+i)/7) * cellSize; })
     .attr("y", function(d) {  return day(d) * cellSize; })
     .datum(format)

  rect.attr("class", function(d) {
    //console.log(d, data[d])
    var x = data[d]
    var y

    if(x){
      if( x < 9 ){
        y = x
      }else if( x > 9 && x < 15 ){
        y = 9
      }else if(x > 14 && x < 20){
        y = 15
      }else if(x > 19){
        y = 20
      }

      return "day g" + y;
    }else{
      return "day g0"
    }
  })
  .attr("title", function(d) { return d + "&nbsp;&nbsp;&nbsp;" + (data[d] ? data[d] : 0) + " Games";})

  var month = svg.selectAll(".month")
    .data(function(d) { return d3.time.months(new Date(d[0]), new Date(d[1])); })
  .enter().append("text")
    .attr("class", "month-name")
    .attr("x", function(d,i) { return (i * 67) + 47; })
    .attr("y", -7)
    //.attr(function(d,i) { return "transform", "translate("+(i+100)+",-10)"; })
    .style("text-anchor", "middle")
    .text(function(d) { return month(d); });

    d3.select('#baseline')
      .style('width', data.length*22 + 'px');

  $('svg rect').tipsy({
    gravity: 'w',
    html: true
  });



.contrib-footer.clearfix
  .contrib-info
    Summary of games played per day.
  .contrib-legend{:title => "Summary of games played per day."}
    %span Less
    %ul.legend
      %li{:style => "background-color: rgba(63, 80, 96, 0.9)"}
      %li{:style => "background-color: rgba(87, 177, 255, 0.3)"}
      %li{:style => "background-color: rgba(87, 177, 255, 0.5)"}
      %li{:style => "background-color: rgba(87, 177, 255, 0.9)"}
      %li{:style => "background-color: rgba(103, 185, 255, 1)"}
    %span More
